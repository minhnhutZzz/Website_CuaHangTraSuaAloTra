/**
 * Demo script cho module Promotion
 * 
 * Ch·∫°y script n√†y trong browser console ƒë·ªÉ test c√°c ch·ª©c nƒÉng
 * 
 * @author Spring Boot Team
 * @version 1.0
 */

console.log('üéØ Promotion Module Demo Script');
console.log('================================');

// Test data m·∫´u
const samplePromotions = [
    {
        name: "Khuy·∫øn m√£i Black Friday 2024",
        description: "Gi·∫£m gi√° l·ªõn nh·∫•t trong nƒÉm - l√™n ƒë·∫øn 70%",
        discountPercent: 70,
        startDate: "2024-11-29T00:00:00",
        endDate: "2024-11-30T23:59:59",
        isActive: true
    },
    {
        name: "∆Øu ƒë√£i cu·ªëi tu·∫ßn",
        description: "Gi·∫£m gi√° 20% cho t·∫•t c·∫£ s·∫£n ph·∫©m",
        discountPercent: 20,
        startDate: "2024-12-07T00:00:00",
        endDate: "2024-12-08T23:59:59",
        isActive: true
    },
    {
        name: "Khuy·∫øn m√£i th√°ng 12",
        description: "Ch√†o m·ª´ng th√°ng 12 v·ªõi nhi·ªÅu ∆∞u ƒë√£i h·∫•p d·∫´n",
        discountPercent: 30,
        startDate: "2024-12-01T00:00:00",
        endDate: "2024-12-31T23:59:59",
        isActive: true
    }
];

// Function ƒë·ªÉ t·∫°o khuy·∫øn m√£i demo
async function createDemoPromotions() {
    console.log('üöÄ B·∫Øt ƒë·∫ßu t·∫°o khuy·∫øn m√£i demo...');
    
    const apiTester = new PromotionAPITester();
    
    for (let i = 0; i < samplePromotions.length; i++) {
        const promotion = samplePromotions[i];
        console.log(`\nüìù T·∫°o khuy·∫øn m√£i ${i + 1}: ${promotion.name}`);
        
        try {
            const result = await apiTester.testCreatePromotion(promotion);
            console.log(`‚úÖ Th√†nh c√¥ng! ID: ${result.id}`);
        } catch (error) {
            console.log(`‚ùå L·ªói: ${error.message}`);
        }
        
        // Delay 1 gi√¢y gi·ªØa c√°c request
        await new Promise(resolve => setTimeout(resolve, 1000));
    }
    
    console.log('\nüéâ Ho√†n th√†nh t·∫°o khuy·∫øn m√£i demo!');
}

// Function ƒë·ªÉ test t·∫•t c·∫£ ch·ª©c nƒÉng
async function runFullDemo() {
    console.log('üé¨ Ch·∫°y demo ƒë·∫ßy ƒë·ªß...');
    
    const apiTester = new PromotionAPITester();
    
    try {
        // 1. T·∫°o khuy·∫øn m√£i demo
        await createDemoPromotions();
        
        // 2. L·∫•y danh s√°ch
        console.log('\nüìã L·∫•y danh s√°ch khuy·∫øn m√£i...');
        await apiTester.testGetAllPromotions();
        
        // 3. T√¨m ki·∫øm
        console.log('\nüîç T√¨m ki·∫øm khuy·∫øn m√£i...');
        await apiTester.testSearchPromotions('Black Friday');
        
        // 4. L·∫•y active
        console.log('\n‚úÖ L·∫•y khuy·∫øn m√£i ƒëang ho·∫°t ƒë·ªông...');
        await apiTester.testGetActivePromotions();
        
        // 5. Ph√¢n trang
        console.log('\nüìÑ Test ph√¢n trang...');
        await apiTester.testGetPromotionsPaged(0, 5);
        
        // 6. ƒê·∫øm
        console.log('\nüî¢ ƒê·∫øm khuy·∫øn m√£i...');
        await apiTester.testCountPromotions();
        
        console.log('\nüéâ Demo ho√†n th√†nh th√†nh c√¥ng!');
        
    } catch (error) {
        console.error('üí• Demo th·∫•t b·∫°i:', error);
    }
}

// Function ƒë·ªÉ x√≥a t·∫•t c·∫£ khuy·∫øn m√£i demo
async function cleanupDemoPromotions() {
    console.log('üßπ D·ªçn d·∫πp khuy·∫øn m√£i demo...');
    
    try {
        const apiTester = new PromotionAPITester();
        const promotions = await apiTester.testGetAllPromotions();
        
        for (const promotion of promotions) {
            if (samplePromotions.some(sample => sample.name === promotion.name)) {
                console.log(`üóëÔ∏è X√≥a khuy·∫øn m√£i: ${promotion.name}`);
                await apiTester.testDeletePromotion(promotion.id);
            }
        }
        
        console.log('‚úÖ D·ªçn d·∫πp ho√†n th√†nh!');
        
    } catch (error) {
        console.error('‚ùå L·ªói d·ªçn d·∫πp:', error);
    }
}

// Function ƒë·ªÉ hi·ªÉn th·ªã menu demo
function showDemoMenu() {
    console.log('\nüìã MENU DEMO:');
    console.log('1. createDemoPromotions() - T·∫°o khuy·∫øn m√£i demo');
    console.log('2. runFullDemo() - Ch·∫°y demo ƒë·∫ßy ƒë·ªß');
    console.log('3. cleanupDemoPromotions() - D·ªçn d·∫πp khuy·∫øn m√£i demo');
    console.log('4. showDemoMenu() - Hi·ªÉn th·ªã menu n√†y');
    console.log('\nüí° S·ª≠ d·ª•ng: G√µ t√™n function trong console ƒë·ªÉ ch·∫°y');
}

// Function ƒë·ªÉ test giao di·ªán
function testUI() {
    console.log('üé® Test giao di·ªán...');
    
    // Ki·ªÉm tra xem c√≥ ƒëang ·ªü trang admin kh√¥ng
    if (!window.location.pathname.includes('/admin/')) {
        console.log('‚ö†Ô∏è Vui l√≤ng truy c·∫≠p trang admin tr∆∞·ªõc');
        console.log('üîó Link: http://localhost:8080/admin/promotions');
        return;
    }
    
    // Ki·ªÉm tra c√°c element c·∫ßn thi·∫øt
    const elements = [
        { selector: '#adminSidebarNav', name: 'Sidebar navigation' },
        { selector: '.promotion-card', name: 'Promotion cards' },
        { selector: '.form-section', name: 'Form sections' },
        { selector: '.preview-card', name: 'Preview card' }
    ];
    
    elements.forEach(element => {
        const el = document.querySelector(element.selector);
        if (el) {
            console.log(`‚úÖ ${element.name}: T√¨m th·∫•y`);
        } else {
            console.log(`‚ùå ${element.name}: Kh√¥ng t√¨m th·∫•y`);
        }
    });
    
    // Ki·ªÉm tra menu khuy·∫øn m√£i
    const promotionMenu = document.querySelector('a[href="/admin/promotions"]');
    if (promotionMenu) {
        console.log('‚úÖ Menu "Qu·∫£n l√Ω khuy·∫øn m√£i": T√¨m th·∫•y');
    } else {
        console.log('‚ùå Menu "Qu·∫£n l√Ω khuy·∫øn m√£i": Kh√¥ng t√¨m th·∫•y');
    }
    
    const createMenu = document.querySelector('a[href="/admin/promotions/create"]');
    if (createMenu) {
        console.log('‚úÖ Menu "Th√™m khuy·∫øn m√£i": T√¨m th·∫•y');
    } else {
        console.log('‚ùå Menu "Th√™m khuy·∫øn m√£i": Kh√¥ng t√¨m th·∫•y');
    }
}

// Auto-run khi load
document.addEventListener('DOMContentLoaded', function() {
    console.log('üéØ Promotion Demo Script ƒë√£ s·∫µn s√†ng!');
    showDemoMenu();
});

// Export functions
window.createDemoPromotions = createDemoPromotions;
window.runFullDemo = runFullDemo;
window.cleanupDemoPromotions = cleanupDemoPromotions;
window.showDemoMenu = showDemoMenu;
window.testUI = testUI;

console.log('üéØ Promotion Demo Script loaded successfully!');
